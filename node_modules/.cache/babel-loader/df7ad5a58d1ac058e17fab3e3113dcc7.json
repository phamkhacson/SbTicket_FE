{"ast":null,"code":"var _jsxFileName = \"G:\\\\Learning\\\\ltw\\\\SbTickets_FE\\\\src\\\\pages\\\\StatisticalRevenueBus\\\\RevenueBusDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport * as AppURL from '../../services/urlAPI';\nimport instance from \"../../services\";\nimport Widget from \"../../components/Widget/Widget\";\nimport MUIDataTable from \"mui-datatables\";\nimport { toast } from \"react-toastify\";\nimport { useParams } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport { Button as MUIButton } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst states = {\n  sent: \"success\",\n  pending: \"warning\",\n  declined: \"secondary\"\n};\nconst useStyles = makeStyles(theme => ({\n  input: {\n    width: '80%',\n    fontSize: '14px !important',\n    marginBottom: '30px'\n  }\n}));\nexport default function RevenueBus() {\n  _s();\n\n  const [listData, setlistData] = useState([]);\n  const {\n    id\n  } = useParams();\n  let history = useHistory();\n  const data = {\n    busId: \"\",\n    carNumber: \"\",\n    tripBusId: \"\",\n    numberGuest: \"\",\n    priceTrip: \"\",\n    timeTrip: \"\",\n    revenue: \"\"\n  };\n  let url = AppURL.getRevenueBuById + '/' + id;\n  instance.get(url).then(res => {\n    const data = res === null || res === void 0 ? void 0 : res.body.map(item => {\n      let labelitem = [];\n      const dateTime = new Date(item === null || item === void 0 ? void 0 : item.timeTrip).toLocaleString('vi-VI');\n      labelitem.push(item === null || item === void 0 ? void 0 : item.busId, item === null || item === void 0 ? void 0 : item.carNumber, item === null || item === void 0 ? void 0 : item.tripBusId, item === null || item === void 0 ? void 0 : item.numberGuest, item === null || item === void 0 ? void 0 : item.priceTrip, dateTime, item === null || item === void 0 ? void 0 : item.revenue);\n      return labelitem;\n    });\n    setlistData(data);\n  }).catch(error => {\n    toast.error(\"Not Found\");\n  });\n  console.log(\"listData: \" + JSON.stringify(listData));\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n          title: \"Statistical Detail Revenue Bus\",\n          buttonBack: /*#__PURE__*/_jsxDEV(MUIButton, {\n            variant: \"contained\",\n            size: \"medium\",\n            color: \"secondary\",\n            onClick: () => history.goBack(),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Widget, {\n          disableWidgetMenu: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: listData ? /*#__PURE__*/_jsxDEV(MUIDataTable, {\n                title: \"Detail Revenue Bus List\",\n                data: listData,\n                columns: [\"Bus Code\", \"Car Number\", \"TripBus Code\", \"Number Guest\", \"Trip Price\", \"Trip Time\", \"Revenue\"],\n                options: {\n                  filterType: \"checkbox\",\n                  draggableColumns: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 44\n              }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RevenueBus, \"/DDGjcm27iBT0oVArh+cB6TEMX4=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = RevenueBus;\n\nvar _c;\n\n$RefreshReg$(_c, \"RevenueBus\");","map":{"version":3,"sources":["G:/Learning/ltw/SbTickets_FE/src/pages/StatisticalRevenueBus/RevenueBusDetail.js"],"names":["React","useEffect","useState","Grid","CircularProgress","PageTitle","makeStyles","withStyles","AppURL","instance","Widget","MUIDataTable","toast","useParams","useHistory","Button","MUIButton","states","sent","pending","declined","useStyles","theme","input","width","fontSize","marginBottom","RevenueBus","listData","setlistData","id","history","data","busId","carNumber","tripBusId","numberGuest","priceTrip","timeTrip","revenue","url","getRevenueBuById","get","then","res","body","map","item","labelitem","dateTime","Date","toLocaleString","push","catch","error","console","log","JSON","stringify","goBack","filterType","draggableColumns"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    CircularProgress\r\n} from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport * as AppURL from '../../services/urlAPI'\r\nimport instance from \"../../services\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button as MUIButton } from \"@material-ui/core\";\r\nconst states = {\r\n    sent: \"success\",\r\n    pending: \"warning\",\r\n    declined: \"secondary\",\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        width: '80%',\r\n        fontSize: '14px !important',\r\n        marginBottom: '30px'\r\n    },\r\n}));\r\n\r\n\r\nexport default function RevenueBus() {\r\n    const [listData, setlistData] = useState([]);\r\n    const { id } = useParams();\r\n    let history = useHistory();\r\n\r\n    const data = {\r\n        busId: \"\",\r\n        carNumber: \"\",\r\n        tripBusId: \"\",\r\n        numberGuest: \"\",\r\n        priceTrip: \"\",\r\n        timeTrip: \"\",\r\n        revenue: \"\",\r\n    };\r\n    let url = AppURL.getRevenueBuById + '/' + id;\r\n    instance.get(url)\r\n        .then(res => {\r\n\r\n            const data = res?.body.map(item => {\r\n                let labelitem = [];\r\n                const dateTime = new Date(item?.timeTrip).toLocaleString('vi-VI');\r\n                labelitem.push(item?.busId, item?.carNumber, item?.tripBusId, item?.numberGuest, item?.priceTrip, dateTime, item?.revenue);\r\n                return labelitem;\r\n            })\r\n            setlistData(data);\r\n        })\r\n        .catch(error => {\r\n            toast.error(\"Not Found\");\r\n        })\r\n\r\nconsole.log(\"listData: \" + JSON.stringify(listData));\r\n\r\nreturn (\r\n    <Grid item xs={12}>\r\n        <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n                <PageTitle\r\n                    title=\"Statistical Detail Revenue Bus\"\r\n                    buttonBack={<MUIButton\r\n                        variant=\"contained\"\r\n                        size=\"medium\"\r\n                        color=\"secondary\"\r\n                        onClick={() => history.goBack()}\r\n                    >\r\n                        Back\r\n                    </MUIButton>}\r\n                />\r\n                <Widget disableWidgetMenu>\r\n                    <Grid container item xs={12}>\r\n                        <Grid item xs={12}>\r\n                            {\r\n                                listData ? <MUIDataTable\r\n                                    title=\"Detail Revenue Bus List\"                                   \r\n                                    data={listData}\r\n                                    columns={[\"Bus Code\", \"Car Number\", \"TripBus Code\", \"Number Guest\", \"Trip Price\", \"Trip Time\", \"Revenue\"]}\r\n                                    options={{\r\n                                        filterType: \"checkbox\",\r\n                                        draggableColumns: true,\r\n                                      }}\r\n                                /> : <CircularProgress />\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Widget>\r\n            </Grid>\r\n        </Grid>\r\n    </Grid>\r\n);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}