{"ast":null,"code":"var _jsxFileName = \"G:\\\\Learning\\\\ltw\\\\SbTickets_FE\\\\src\\\\pages\\\\login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Grid, CircularProgress, Typography, Button, Tabs, Tab, TextField } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\"; // styles\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\"; // logo\n\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\"; // context\n\nimport { useUserDispatch, loginUser, useUserState } from \"../../context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  var classes = useStyles(); // global\n\n  var userDispatch = useUserDispatch();\n  let {\n    loginFailure\n  } = useUserState(); // local\n\n  var [isLoading, setIsLoading] = useState(false);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [loginValue, setLoginValue] = useState(\"admin\");\n  var [passwordValue, setPasswordValue] = useState(\"123456\");\n\n  const notify = message => toast.error(message);\n\n  useEffect(() => {\n    if (loginFailure) {\n      notify(loginFailure);\n    }\n  }, [loginFailure]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.logotypeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        className: classes.logotypeImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.logotypeText,\n        children: \"SbTickets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: activeTabId,\n          onChange: (e, id) => setActiveTabId(id),\n          indicatorColor: \"primary\",\n          textColor: \"primary\",\n          centered: true,\n          children: /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Login\",\n            classes: {\n              root: classes.tab\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h1\",\n            className: classes.greeting,\n            children: \"Good Morning, Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            className: classes.googleButton,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: google,\n              alt: \"google\",\n              className: classes.googleIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), \"\\xA0Sign in with Google\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.formDividerContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formDivider\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.formDividerWord,\n              children: \"or\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.formDivider\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: loginValue,\n            onChange: e => setLoginValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"Email Adress\",\n            type: \"email\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: passwordValue,\n            onChange: e => setPasswordValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"Password\",\n            type: \"password\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.formButtons,\n            children: [isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 26,\n              className: classes.loginLoader\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loginValue.length === 0 || passwordValue.length === 0,\n              onClick: () => loginUser(userDispatch, loginValue, passwordValue, props.history, setIsLoading, notify),\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"large\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              size: \"large\",\n              className: classes.forgetButton,\n              children: \"Forget Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"primary\",\n        className: classes.copyright,\n        children: [\"\\xA9 \", new Date().getFullYear(), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            textDecoration: 'none',\n            color: 'inherit'\n          },\n          href: \"https://flatlogic.com\",\n          rel: \"noopener noreferrer\",\n          target: \"_blank\",\n          children: \"Flatlogic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 40\n        }, this), \", LLC. All rights reserved.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"dnkWiMf7knftaPFbrSfgucORLJU=\", false, function () {\n  return [useStyles, useUserDispatch, useUserState];\n});\n\n_c = Login;\nexport default _c2 = withRouter(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["G:/Learning/ltw/SbTickets_FE/src/pages/login/Login.js"],"names":["React","useEffect","useState","Grid","CircularProgress","Typography","Button","Tabs","Tab","TextField","withRouter","ToastContainer","toast","useStyles","useUserDispatch","loginUser","useUserState","Login","props","classes","userDispatch","loginFailure","isLoading","setIsLoading","activeTabId","setActiveTabId","loginValue","setLoginValue","passwordValue","setPasswordValue","notify","message","error","container","logotypeContainer","logo","logotypeImage","logotypeText","formContainer","form","e","id","root","tab","greeting","googleButton","google","googleIcon","formDividerContainer","formDivider","formDividerWord","underline","textFieldUnderline","input","textField","target","value","formButtons","loginLoader","length","history","forgetButton","copyright","Date","getFullYear","textDecoration","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\nimport google from \"../../images/google.svg\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser, useUserState } from \"../../context/UserContext\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n  let { loginFailure } = useUserState();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [loginValue, setLoginValue] = useState(\"admin\");\r\n  var [passwordValue, setPasswordValue] = useState(\"123456\");\r\n\r\n  const notify = (message) => toast.error(message);\r\n\r\n  useEffect(() => {\r\n    if (loginFailure) {\r\n      notify(loginFailure)\r\n    }\r\n  }, [loginFailure]);\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <ToastContainer />\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>SbTickets</Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\r\n          </Tabs>\r\n          <React.Fragment>\r\n            <Typography variant=\"h1\" className={classes.greeting}>\r\n              Good Morning, Admin\r\n            </Typography>\r\n            <Button size=\"large\" className={classes.googleButton}>\r\n              <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n              &nbsp;Sign in with Google\r\n            </Button>\r\n            <div className={classes.formDividerContainer}>\r\n              <div className={classes.formDivider} />\r\n              <Typography className={classes.formDividerWord}>or</Typography>\r\n              <div className={classes.formDivider} />\r\n            </div>\r\n            <TextField\r\n              id=\"email\"\r\n              InputProps={{\r\n                classes: {\r\n                  underline: classes.textFieldUnderline,\r\n                  input: classes.textField,\r\n                },\r\n              }}\r\n              value={loginValue}\r\n              onChange={e => setLoginValue(e.target.value)}\r\n              margin=\"normal\"\r\n              placeholder=\"Email Adress\"\r\n              type=\"email\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"password\"\r\n              InputProps={{\r\n                classes: {\r\n                  underline: classes.textFieldUnderline,\r\n                  input: classes.textField,\r\n                },\r\n              }}\r\n              value={passwordValue}\r\n              onChange={e => setPasswordValue(e.target.value)}\r\n              margin=\"normal\"\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              fullWidth\r\n            />\r\n            <div className={classes.formButtons}>\r\n              {isLoading ? (\r\n                <CircularProgress size={26} className={classes.loginLoader} />\r\n              ) : (\r\n                <Button\r\n                  disabled={\r\n                    loginValue.length === 0 || passwordValue.length === 0\r\n                  }\r\n                  onClick={() =>\r\n                    loginUser(\r\n                      userDispatch,\r\n                      loginValue,\r\n                      passwordValue,\r\n                      props.history,\r\n                      setIsLoading,\r\n                      notify,\r\n                    )\r\n                  }\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                >\r\n                  Login\r\n                </Button>\r\n              )}\r\n              <Button\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                className={classes.forgetButton}\r\n              >\r\n                Forget Password\r\n              </Button>\r\n            </div>\r\n          </React.Fragment>\r\n        </div>\r\n        <Typography color=\"primary\" className={classes.copyright}>\r\n          © {new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://flatlogic.com\" rel=\"noopener noreferrer\" target=\"_blank\">Flatlogic</a>, LLC. All rights reserved.\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n"]},"metadata":{},"sourceType":"module"}