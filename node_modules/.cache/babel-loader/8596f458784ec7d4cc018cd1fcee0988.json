{"ast":null,"code":"var _jsxFileName = \"G:\\\\Learning\\\\ltw\\\\SbTickets_FE\\\\src\\\\pages\\\\Statistical\\\\Statistical.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Grid, FormControl, InputLabel, Select, MenuItem, TextField, Button, CircularProgress } from \"@material-ui/core\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport * as AppURL from '../../services/urlAPI';\nimport instance from \"../../services\";\nimport Widget from \"../../components/Widget/Widget\";\nimport MUIDataTable from \"mui-datatables\";\nimport { toast } from \"react-toastify\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst states = {\n  sent: \"success\",\n  pending: \"warning\",\n  declined: \"secondary\"\n};\nconst useStyles = makeStyles(theme => ({\n  input: {\n    width: '80%',\n    fontSize: '14px !important',\n    marginBottom: '30px'\n  }\n}));\nexport default function Statistical() {\n  _s();\n\n  const classes = useStyles();\n  const [listDriver, setlistDriver] = useState([]);\n  const [listData, setlistData] = useState([]);\n  const [timePicker, settimePicker] = useState(\"\");\n  const [selecteDriver, setSelecteDriver] = useState(\"\");\n  const [sumwages, setSumWages] = useState(0);\n  console.log(\"timePicker: \" + timePicker);\n  useEffect(() => {\n    let url = AppURL.getAllDrivers;\n    instance.get(url).then(res => {\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        const body = res === null || res === void 0 ? void 0 : res.body;\n        setlistDriver(body);\n      }\n    });\n  }, []);\n\n  const searchData = () => {\n    if (timePicker === \"\" || selecteDriver === \"\") {\n      toast.warning(\"Please select driver and time to Statistical\");\n    } else {\n      let time = timePicker.split(\"-\")[1].length === 1 ? timePicker.split(\"-\")[0] + \"-0\" + timePicker.split(\"-\")[1] : timePicker;\n      instance.post(AppURL.getListWages, {\n        id: selecteDriver,\n        scrapTime: time\n      }).then(res => {\n        const data = res === null || res === void 0 ? void 0 : res.body.map(item => {\n          let labelitem = [];\n          labelitem.push(item === null || item === void 0 ? void 0 : item.driverName, item === null || item === void 0 ? void 0 : item.tripBusId, item === null || item === void 0 ? void 0 : item.scrapDateTime, (item === null || item === void 0 ? void 0 : item.roleCar) === \"1\" ? \"Driver\" : \"Assistant\", item === null || item === void 0 ? void 0 : item.wages, item === null || item === void 0 ? void 0 : item.fixedSalary);\n          return labelitem;\n        });\n\n        if (data) {\n          let sum = 0;\n          res === null || res === void 0 ? void 0 : res.body.forEach(element => {\n            console.log(\"element?.wages\" + element);\n            sum = sum + parseInt(element === null || element === void 0 ? void 0 : element.wages);\n            console.log(sum);\n          });\n          setSumWages(sum);\n        }\n\n        setlistData(data);\n      }).catch(error => {\n        toast.error(\"Not Found\");\n      });\n    }\n  };\n\n  console.log(\"listData: \" + JSON.stringify(listData));\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n          title: \"Statistical Wages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Widget, {\n          disableWidgetMenu: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                className: \"MuiTextField-root makeStyles-input-79\",\n                style: {\n                  marginBottom: `30px`,\n                  width: `80%`\n                },\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-simple-select-label\",\n                  children: \"List Driver\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"demo-simple-select-label\",\n                  id: \"demo-simple-select\",\n                  label: \"LineBus\",\n                  name: \"driverId\" //value={selectedDriver}\n                  ,\n                  onChange: e => setSelecteDriver(e.target.value),\n                  MenuProps: {\n                    anchorOrigin: {\n                      vertical: \"bottom\",\n                      horizontal: \"left\"\n                    },\n                    transformOrigin: {\n                      vertical: \"top\",\n                      horizontal: \"left\"\n                    },\n                    getContentAnchorEl: null\n                  } //disabled={!isEditing}\n                  ,\n                  children: listDriver.length > 0 && listDriver.map(e => {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: e.id,\n                      children: e.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 36\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                utils: DateFnsUtils,\n                style: {\n                  marginBottom: `30px`,\n                  width: `80%`\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  justify: \"flex-start\",\n                  children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                    variant: \"inline\",\n                    openTo: \"year\",\n                    views: [\"year\", \"month\"],\n                    label: \"Year and Month\",\n                    helperText: \"Start from year selection\",\n                    value: timePicker,\n                    onChange: e => {\n                      settimePicker(e.getFullYear() + \"-\" + (e.getMonth() + 1));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                size: \"medium\",\n                color: \"primary\",\n                onClick: searchData,\n                style: {\n                  marginTop: `30px`,\n                  width: `80%`\n                },\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 9,\n              children: [listData ? /*#__PURE__*/_jsxDEV(MUIDataTable, {\n                title: \"TripBus List\",\n                data: listData,\n                columns: [\"DriverName\", \"TripBusId\", \"ScrapDateTime\", \"RoleCar\", \"Wages\", \"FixedSalary\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 34\n              }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                item: true,\n                xs: 12,\n                style: {\n                  marginTop: `30px`\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 9\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"dob\",\n                    label: \"SumWages\",\n                    type: \"text\",\n                    value: sumwages,\n                    sx: {\n                      width: 200\n                    } //type=\"variant\"\n                    ,\n                    className: classes.input,\n                    variant: \"outlined\",\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Statistical, \"aH9wQhdlbz86EpzXK5EKS+yZkhM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Statistical;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistical\");","map":{"version":3,"sources":["G:/Learning/ltw/SbTickets_FE/src/pages/Statistical/Statistical.js"],"names":["React","useEffect","useState","Grid","FormControl","InputLabel","Select","MenuItem","TextField","Button","CircularProgress","PageTitle","makeStyles","withStyles","AppURL","instance","Widget","MUIDataTable","toast","MuiPickersUtilsProvider","DatePicker","DateFnsUtils","states","sent","pending","declined","useStyles","theme","input","width","fontSize","marginBottom","Statistical","classes","listDriver","setlistDriver","listData","setlistData","timePicker","settimePicker","selecteDriver","setSelecteDriver","sumwages","setSumWages","console","log","url","getAllDrivers","get","then","res","status","body","searchData","warning","time","split","length","post","getListWages","id","scrapTime","data","map","item","labelitem","push","driverName","tripBusId","scrapDateTime","roleCar","wages","fixedSalary","sum","forEach","element","parseInt","catch","error","JSON","stringify","e","target","value","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","name","getFullYear","getMonth","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,IADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,MAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,MAPF,EAQEC,gBARF,QASO,mBATP;AAUA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,uBAAT,EAAkCC,UAAlC,QAAoD,sBAApD;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,SADO;AAEbC,EAAAA,OAAO,EAAE,SAFI;AAGbC,EAAAA,QAAQ,EAAE;AAHG,CAAf;AAOA,MAAMC,SAAS,GAAGd,UAAU,CAAEe,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,KADF;AAELC,IAAAA,QAAQ,EAAE,iBAFL;AAGLC,IAAAA,YAAY,EAAE;AAHT;AADgC,CAAZ,CAAD,CAA5B;AASA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BjC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACkC,QAAD,EAAWC,WAAX,IAA0BnC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoC,UAAD,EAAaC,aAAb,IAA8BrC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACsC,aAAD,EAAgBC,gBAAhB,IAAoCvC,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACwC,QAAD,EAAWC,WAAX,IAA0BzC,QAAQ,CAAC,CAAD,CAAxC;AACA0C,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBP,UAA7B;AACArC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6C,GAAG,GAAGhC,MAAM,CAACiC,aAAjB;AACAhC,IAAAA,QAAQ,CAACiC,GAAT,CAAaF,GAAb,EACGG,IADH,CACQC,GAAG,IAAI;AACX,UAAI,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEC,MAAL,MAAgB,GAApB,EAAyB;AACvB,cAAMC,IAAI,GAAGF,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEE,IAAlB;AACAjB,QAAAA,aAAa,CAACiB,IAAD,CAAb;AACD;AACF,KANH;AAOD,GATQ,EASN,EATM,CAAT;;AAWA,QAAMC,UAAU,GAAG,MAAM;AACrB,QAAGf,UAAU,KAAK,EAAf,IAAqBE,aAAa,KAAK,EAA1C,EAA6C;AAC3CtB,MAAAA,KAAK,CAACoC,OAAN,CAAc,8CAAd;AACD,KAFD,MAGI;AACF,UAAIC,IAAI,GAAGjB,UAAU,CAACkB,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,EAAyBC,MAAzB,KAAoC,CAApC,GAAwCnB,UAAU,CAACkB,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,IAA2B,IAA3B,GAAkClB,UAAU,CAACkB,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAA1E,GAAqGlB,UAAhH;AACAvB,MAAAA,QAAQ,CAAC2C,IAAT,CAAc5C,MAAM,CAAC6C,YAArB,EAAmC;AACjCC,QAAAA,EAAE,EAAEpB,aAD6B;AAEjCqB,QAAAA,SAAS,EAAEN;AAFsB,OAAnC,EAIGN,IAJH,CAIQC,GAAG,IAAI;AAEX,cAAMY,IAAI,GAAGZ,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEE,IAAL,CAAUW,GAAV,CAAcC,IAAI,IAAI;AACjC,cAAIC,SAAS,GAAG,EAAhB;AACAA,UAAAA,SAAS,CAACC,IAAV,CAAeF,IAAf,aAAeA,IAAf,uBAAeA,IAAI,CAAEG,UAArB,EAAiCH,IAAjC,aAAiCA,IAAjC,uBAAiCA,IAAI,CAAEI,SAAvC,EAAkDJ,IAAlD,aAAkDA,IAAlD,uBAAkDA,IAAI,CAAEK,aAAxD,EAAsE,CAAAL,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEM,OAAN,MAAkB,GAAlB,GAAwB,QAAxB,GAAmC,WAAzG,EAAsHN,IAAtH,aAAsHA,IAAtH,uBAAsHA,IAAI,CAAEO,KAA5H,EAAoIP,IAApI,aAAoIA,IAApI,uBAAoIA,IAAI,CAAEQ,WAA1I;AACA,iBAAOP,SAAP;AACD,SAJY,CAAb;;AAMA,YAAGH,IAAH,EAAQ;AACN,cAAIW,GAAG,GAAG,CAAV;AACAvB,UAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEE,IAAL,CAAUsB,OAAV,CAAkBC,OAAO,IAAI;AAC3B/B,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmB8B,OAA/B;AACAF,YAAAA,GAAG,GAAGA,GAAG,GAAGG,QAAQ,CAACD,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEJ,KAAV,CAApB;AACA3B,YAAAA,OAAO,CAACC,GAAR,CAAY4B,GAAZ;AACD,WAJD;AAKA9B,UAAAA,WAAW,CAAC8B,GAAD,CAAX;AACD;;AAGDpC,QAAAA,WAAW,CAACyB,IAAD,CAAX;AACD,OAxBH,EAyBGe,KAzBH,CAyBSC,KAAK,IAAI;AACd5D,QAAAA,KAAK,CAAC4D,KAAN,CAAY,WAAZ;AACD,OA3BH;AA4BD;AACJ,GAnCD;;AAqCAlC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAekC,IAAI,CAACC,SAAL,CAAe5C,QAAf,CAA3B;AAIA,sBAGE,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA,2BACA,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,6BACQ,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,gCACA,QAAC,SAAD;AACM,UAAA,KAAK,EAAC;AADZ;AAAA;AAAA;AAAA;AAAA,gBADA,eAIE,QAAC,MAAD;AAAQ,UAAA,iBAAiB,MAAzB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,IAAI,MAApB;AAAqB,YAAA,EAAE,EAAE,EAAzB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,sCACA,QAAC,WAAD;AAAa,gBAAA,SAAS,EAAC,uCAAvB;AAA+D,gBAAA,KAAK,EAAE;AAAEL,kBAAAA,YAAY,EAAG,MAAjB;AAAuBF,kBAAAA,KAAK,EAAG;AAA/B,iBAAtE;AAAA,wCACE,QAAC,UAAD;AAAY,kBAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,MAAD;AACE,kBAAA,OAAO,EAAC,0BADV;AAEE,kBAAA,EAAE,EAAC,oBAFL;AAGE,kBAAA,KAAK,EAAC,SAHR;AAIE,kBAAA,IAAI,EAAC,UAJP,CAKE;AALF;AAME,kBAAA,QAAQ,EAAGoD,CAAD,IAAOxC,gBAAgB,CAACwC,CAAC,CAACC,MAAF,CAASC,KAAV,CANnC;AAOE,kBAAA,SAAS,EAAE;AACTC,oBAAAA,YAAY,EAAE;AACZC,sBAAAA,QAAQ,EAAE,QADE;AAEZC,sBAAAA,UAAU,EAAE;AAFA,qBADL;AAKTC,oBAAAA,eAAe,EAAE;AACfF,sBAAAA,QAAQ,EAAE,KADK;AAEfC,sBAAAA,UAAU,EAAE;AAFG,qBALR;AASTE,oBAAAA,kBAAkB,EAAE;AATX,mBAPb,CAmBE;AAnBF;AAAA,4BAsBMtD,UAAU,CAACuB,MAAX,GAAoB,CAApB,IAAyBvB,UAAU,CAAC6B,GAAX,CAAgBkB,CAAD,IAAO;AAC7C,wCAAO,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAEA,CAAC,CAACrB,EAAnB;AAAA,gCAAwBqB,CAAC,CAACQ;AAA1B;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD,mBAFwB;AAtB/B;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAqCA,QAAC,uBAAD;AAAyB,gBAAA,KAAK,EAAEpE,YAAhC;AAA8C,gBAAA,KAAK,EAAE;AAAEU,kBAAAA,YAAY,EAAG,MAAjB;AAAuBF,kBAAAA,KAAK,EAAG;AAA/B,iBAArD;AAAA,uCACI,QAAC,IAAD;AAAM,kBAAA,SAAS,MAAf;AAAgB,kBAAA,OAAO,EAAC,YAAxB;AAAA,yCACI,QAAC,UAAD;AACE,oBAAA,OAAO,EAAC,QADV;AAEE,oBAAA,MAAM,EAAC,MAFT;AAGE,oBAAA,KAAK,EAAE,CAAC,MAAD,EAAS,OAAT,CAHT;AAIE,oBAAA,KAAK,EAAC,gBAJR;AAKE,oBAAA,UAAU,EAAC,2BALb;AAME,oBAAA,KAAK,EAAES,UANT;AAOE,oBAAA,QAAQ,EAAG2C,CAAD,IAAO;AACf1C,sBAAAA,aAAa,CAAC0C,CAAC,CAACS,WAAF,KAAkB,GAAlB,IAAwBT,CAAC,CAACU,QAAF,KAAe,CAAvC,CAAD,CAAb;AACD;AATH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBArCA,eAoDA,QAAC,MAAD;AACE,gBAAA,OAAO,EAAC,WADV;AAEE,gBAAA,IAAI,EAAC,QAFP;AAGE,gBAAA,KAAK,EAAC,SAHR;AAIE,gBAAA,OAAO,EAAEtC,UAJX;AAKE,gBAAA,KAAK,EAAE;AAAEuC,kBAAAA,SAAS,EAAG,MAAd;AAAoB/D,kBAAAA,KAAK,EAAG;AAA5B,iBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBApDA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAgEE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,yBAGIO,QAAQ,gBAAG,QAAC,YAAD;AACT,gBAAA,KAAK,EAAC,cADG;AAET,gBAAA,IAAI,EAAEA,QAFG;AAGT,gBAAA,OAAO,EAAE,CAAE,YAAF,EAAgB,WAAhB,EAA8B,eAA9B,EAA+C,SAA/C,EAA0D,OAA1D,EAAmE,aAAnE;AAHA;AAAA;AAAA;AAAA;AAAA,sBAAH,gBAIH,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,sBAPT,eAUE,QAAC,IAAD;AAAM,gBAAA,SAAS,MAAf;AAAgB,gBAAA,IAAI,MAApB;AAAqB,gBAAA,EAAE,EAAE,EAAzB;AAA6B,gBAAA,KAAK,EAAE;AAAEwD,kBAAAA,SAAS,EAAG;AAAd,iBAApC;AAAA,wCACA,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAA,yCACE,QAAC,SAAD;AACE,oBAAA,EAAE,EAAC,KADL;AAEE,oBAAA,KAAK,EAAC,UAFR;AAGE,oBAAA,IAAI,EAAC,MAHP;AAIE,oBAAA,KAAK,EAAElD,QAJT;AAKE,oBAAA,EAAE,EAAE;AAAEb,sBAAAA,KAAK,EAAE;AAAT,qBALN,CAOE;AAPF;AAQE,oBAAA,SAAS,EAAEI,OAAO,CAACL,KARrB;AASE,oBAAA,OAAO,EAAC,UATV;AAUE,oBAAA,QAAQ,EAAE;AAVZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAHF;AA6GD;;GAzKuBI,W;UACNN,S;;;KADMM,W","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport * as AppURL from '../../services/urlAPI'\r\nimport instance from \"../../services\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { toast } from \"react-toastify\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nconst states = {\r\n  sent: \"success\",\r\n  pending: \"warning\",\r\n  declined: \"secondary\",\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\n\r\nexport default function Statistical() {\r\n  const classes = useStyles();\r\n  const [listDriver, setlistDriver] = useState([]);\r\n  const [listData, setlistData] = useState([]);\r\n  const [timePicker, settimePicker] = useState(\"\");\r\n  const [selecteDriver, setSelecteDriver] = useState(\"\");\r\n  const [sumwages, setSumWages] = useState(0);\r\n  console.log(\"timePicker: \" + timePicker);\r\n  useEffect(() => {\r\n    let url = AppURL.getAllDrivers;\r\n    instance.get(url)\r\n      .then(res => {\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setlistDriver(body);\r\n        }\r\n      })\r\n  }, []);\r\n  \r\n  const searchData = () => {\r\n      if(timePicker === \"\" || selecteDriver === \"\"){\r\n        toast.warning(\"Please select driver and time to Statistical\");\r\n      }\r\n      else{\r\n        let time = timePicker.split(\"-\")[1].length === 1 ? timePicker.split(\"-\")[0] + \"-0\" + timePicker.split(\"-\")[1] : timePicker;\r\n        instance.post(AppURL.getListWages, {\r\n          id: selecteDriver,\r\n          scrapTime: time,\r\n        })\r\n          .then(res => {\r\n\r\n            const data = res?.body.map(item => {\r\n              let labelitem = [];\r\n              labelitem.push(item?.driverName, item?.tripBusId, item?.scrapDateTime,item?.roleCar === \"1\" ? \"Driver\" : \"Assistant\", item?.wages,  item?.fixedSalary);\r\n              return labelitem;\r\n            })\r\n\r\n            if(data){\r\n              let sum = 0;\r\n              res?.body.forEach(element => {\r\n                console.log(\"element?.wages\" + element);\r\n                sum = sum + parseInt(element?.wages);\r\n                console.log(sum);\r\n              });\r\n              setSumWages(sum);\r\n            }\r\n\r\n\r\n            setlistData(data);\r\n          })\r\n          .catch(error => {\r\n            toast.error(\"Not Found\");\r\n          })\r\n      }\r\n  }\r\n\r\n  console.log(\"listData: \" + JSON.stringify(listData));\r\n\r\n\r\n  \r\n  return (\r\n    \r\n    \r\n    <Grid item xs={12}>\r\n    <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n            <PageTitle\r\n                  title=\"Statistical Wages\"\r\n                 />\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={3}>\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List Driver</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      name=\"driverId\"\r\n                      //value={selectedDriver}\r\n                      onChange={(e) => setSelecteDriver(e.target.value)}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      //disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listDriver.length > 0 && listDriver.map((e) => {\r\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\r\n                          })\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                    \r\n                   \r\n\r\n                  </FormControl>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils} style={{ marginBottom: `30px`,width: `80%`}}>\r\n                      <Grid container justify=\"flex-start\">\r\n                          <DatePicker\r\n                            variant=\"inline\"\r\n                            openTo=\"year\"\r\n                            views={[\"year\", \"month\"]}\r\n                            label=\"Year and Month\"\r\n                            helperText=\"Start from year selection\"\r\n                            value={timePicker}\r\n                            onChange={(e) => {\r\n                              settimePicker(e.getFullYear() + \"-\" +(e.getMonth() + 1));\r\n                            }}\r\n                          />\r\n                      </Grid>\r\n                    </MuiPickersUtilsProvider>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"medium\"\r\n                    color=\"primary\"\r\n                    onClick={searchData}\r\n                    style={{ marginTop: `30px`,width: `80%`}}\r\n                  >\r\n                     View\r\n                    </Button>\r\n                \r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n\r\n                            {\r\n                      listData ? <MUIDataTable\r\n                        title=\"TripBus List\"\r\n                        data={listData}\r\n                        columns={[ \"DriverName\", \"TripBusId\" , \"ScrapDateTime\", \"RoleCar\", \"Wages\", \"FixedSalary\"]}\r\n                      /> : <CircularProgress />\r\n                    }\r\n\r\n                    <Grid container item xs={12} style={{ marginTop: `30px`,}}>\r\n                    <Grid item xs={9}></Grid>\r\n                    <Grid item xs={3}>\r\n                      <TextField\r\n                        id=\"dob\"\r\n                        label=\"SumWages\"\r\n                        type=\"text\"\r\n                        value={sumwages}\r\n                        sx={{ width: 200 }}\r\n                        \r\n                        //type=\"variant\"\r\n                        className={classes.input}\r\n                        variant=\"outlined\"\r\n                        disabled={true}\r\n                      />\r\n                    </Grid>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                </Grid>\r\n                </Widget>\r\n            </Grid>\r\n     </Grid>\r\n     </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}