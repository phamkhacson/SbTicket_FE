{"ast":null,"code":"import Axios from \"axios\";\nimport { baseUrl } from \"./urlAPI\";\nconst instance = Axios.create({\n  baseURL: baseUrl,\n  // timeout: 100000,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\ninstance.interceptors.request.use(config => {\n  try {\n    let token = getToken();\n    console.log(token);\n\n    if (token) {\n      config.headers = { ...config.headers,\n        Authorization: token\n      };\n    }\n\n    return config;\n  } catch (error) {\n    return Promise.reject(error);\n  }\n});\ninstance.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  var _error$response;\n\n  return Promise.reject((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || (error === null || error === void 0 ? void 0 : error.message));\n});\nexport const getToken = () => {\n  return localStorage.getItem(\"id_token\") || \"\";\n};\nexport default instance;","map":{"version":3,"sources":["G:/Learning/ltw/SbTickets_FE/src/services/index.js"],"names":["Axios","baseUrl","instance","create","baseURL","headers","interceptors","request","use","config","token","getToken","console","log","Authorization","error","Promise","reject","response","data","message","localStorage","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAEH,OADmB;AAE5B;AACAI,EAAAA,OAAO,EAAE;AAAE,oBAAgB;AAAlB;AAHmB,CAAb,CAAjB;AAMAH,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,MAAD,IAAY;AAC5C,MAAI;AACF,QAAIC,KAAK,GAAGC,QAAQ,EAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,QAAIA,KAAJ,EAAW;AACTD,MAAAA,MAAM,CAACJ,OAAP,GAAiB,EACf,GAAGI,MAAM,CAACJ,OADK;AAEfS,QAAAA,aAAa,EAAEJ;AAFA,OAAjB;AAID;;AACD,WAAOD,MAAP;AACD,GAVD,CAUE,OAAOM,KAAP,EAAc;AACd,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD;AACF,CAdD;AAgBAb,QAAQ,CAACI,YAAT,CAAsBY,QAAtB,CAA+BV,GAA/B,CACGU,QAAD,IAAc;AACZ,SAAOA,QAAQ,CAACC,IAAhB;AACD,CAHH,EAIGJ,KAAD,IAAW;AAAA;;AACT,SAAOC,OAAO,CAACC,MAAR,CAAe,CAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,+BAAAA,KAAK,CAAEG,QAAP,oEAAiBC,IAAjB,MAAyBJ,KAAzB,aAAyBA,KAAzB,uBAAyBA,KAAK,CAAEK,OAAhC,CAAf,CAAP;AACD,CANH;AASA,OAAO,MAAMT,QAAQ,GAAG,MAAM;AAC5B,SAAOU,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAoC,EAA3C;AACD,CAFM;AAIP,eAAepB,QAAf","sourcesContent":["import Axios from \"axios\";\r\nimport { baseUrl } from \"./urlAPI\";\r\nconst instance = Axios.create({\r\n  baseURL: baseUrl,\r\n  // timeout: 100000,\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n\r\ninstance.interceptors.request.use((config) => {\r\n  try {\r\n    let token = getToken();\r\n    console.log(token);\r\n    if (token) {\r\n      config.headers = {\r\n        ...config.headers,\r\n        Authorization: token,\r\n      };\r\n    }\r\n    return config;\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n  (response) => {\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error?.response?.data || error?.message);\r\n  }\r\n);\r\n\r\nexport const getToken = () => {\r\n  return localStorage.getItem(\"id_token\") || \"\";\r\n};\r\n\r\nexport default instance;\r\n"]},"metadata":{},"sourceType":"module"}