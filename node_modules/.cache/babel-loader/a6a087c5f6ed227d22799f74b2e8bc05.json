{"ast":null,"code":"var _jsxFileName = \"G:\\\\Learning\\\\ltw\\\\SbTickets_FE\\\\src\\\\context\\\\UserContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport instance from \"../services\";\nimport * as AppURL from \"../services/urlAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar UserStateContext = /*#__PURE__*/React.createContext();\nvar UserDispatchContext = /*#__PURE__*/React.createContext();\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return { ...state,\n        isAuthenticated: true,\n        loginFailure: null\n      };\n\n    case \"LOGIN_FAILURE\":\n      return { ...state,\n        isAuthenticated: false,\n        loginFailure: action.message\n      };\n\n    case \"SIGN_OUT_SUCCESS\":\n      return { ...state,\n        isAuthenticated: false,\n        loginFalure: null\n      };\n\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n}\n\nfunction UserProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  var [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: !!localStorage.getItem(\"id_token\"),\n    loginFailure: null\n  });\n  return /*#__PURE__*/_jsxDEV(UserStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(UserDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProvider, \"W5BmOPsOvPZV068+GzYVE86ZAZs=\");\n\n_c = UserProvider;\n\nfunction useUserState() {\n  _s2();\n\n  var context = React.useContext(UserStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n\n  return context;\n}\n\n_s2(useUserState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nfunction useUserDispatch() {\n  _s3();\n\n  var context = React.useContext(UserDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n\n  return context;\n}\n\n_s3(useUserDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut }; // ###########################################################\n\nasync function loginUser(dispatch, login, password, history, setIsLoading, notify) {\n  setIsLoading(true);\n\n  if (!!login && !!password) {\n    await instance.post(AppURL.login, {\n      username: login,\n      password\n    }).then(res => {\n      const status = res === null || res === void 0 ? void 0 : res.status;\n      console.log(\"status\");\n\n      if (status === 200) {\n        const authToken = res === null || res === void 0 ? void 0 : res.token;\n        localStorage.setItem(\"id_token\", authToken);\n        setIsLoading(false);\n        dispatch({\n          type: 'LOGIN_SUCCESS'\n        });\n        history.push('/app/dashboard');\n      } else if (status === 400) {\n        console.log(res);\n        const msg = (res === null || res === void 0 ? void 0 : res.message) || 'Username and/or password wrong';\n        dispatch({\n          type: \"LOGIN_FAILURE\",\n          message: msg\n        });\n        notify(msg);\n        setIsLoading(true);\n      }\n    }).catch(error => {\n      dispatch({\n        type: \"LOGIN_FAILURE\"\n      }); // showError('Something wrong')\n\n      setIsLoading(false);\n    });\n  } else {\n    dispatch({\n      type: \"LOGIN_FAILURE\"\n    }); // showError('Something wrong')\n\n    setIsLoading(false);\n  }\n}\n\nfunction signOut(dispatch, history) {\n  localStorage.removeItem(\"id_token\");\n  dispatch({\n    type: \"SIGN_OUT_SUCCESS\"\n  });\n  history.push(\"/login\");\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["G:/Learning/ltw/SbTickets_FE/src/context/UserContext.js"],"names":["React","instance","AppURL","UserStateContext","createContext","UserDispatchContext","userReducer","state","action","type","isAuthenticated","loginFailure","message","loginFalure","Error","UserProvider","children","dispatch","useReducer","localStorage","getItem","useUserState","context","useContext","undefined","useUserDispatch","loginUser","signOut","login","password","history","setIsLoading","notify","post","username","then","res","status","console","log","authToken","token","setItem","push","msg","catch","error","removeItem"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,oBAAxB;;AAEA,IAAIC,gBAAgB,gBAAGH,KAAK,CAACI,aAAN,EAAvB;AACA,IAAIC,mBAAmB,gBAAGL,KAAK,CAACI,aAAN,EAA1B;;AAEA,SAASE,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,eAAe,EAAE,IAA7B;AAAmCC,QAAAA,YAAY,EAAE;AAAjD,OAAP;;AACF,SAAK,eAAL;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYG,QAAAA,eAAe,EAAE,KAA7B;AAAoCC,QAAAA,YAAY,EAAEH,MAAM,CAACI;AAAzD,OAAP;;AACF,SAAK,kBAAL;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYG,QAAAA,eAAe,EAAE,KAA7B;AAAoCG,QAAAA,WAAW,EAAE;AAAjD,OAAP;;AACF;AAAS;AACP,cAAM,IAAIC,KAAJ,CAAW,0BAAyBN,MAAM,CAACC,IAAK,EAAhD,CAAN;AACD;AATH;AAWD;;AAED,SAASM,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAClC,MAAI,CAACT,KAAD,EAAQU,QAAR,IAAoBjB,KAAK,CAACkB,UAAN,CAAiBZ,WAAjB,EAA8B;AACpDI,IAAAA,eAAe,EAAE,CAAC,CAACS,YAAY,CAACC,OAAb,CAAqB,UAArB,CADiC;AAEpDT,IAAAA,YAAY,EAAE;AAFsC,GAA9B,CAAxB;AAKA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEJ,KAAlC;AAAA,2BACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,MAAA,KAAK,EAAEU,QAArC;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAbQD,Y;;KAAAA,Y;;AAeT,SAASM,YAAT,GAAwB;AAAA;;AACtB,MAAIC,OAAO,GAAGtB,KAAK,CAACuB,UAAN,CAAiBpB,gBAAjB,CAAd;;AACA,MAAImB,OAAO,KAAKE,SAAhB,EAA2B;AACzB,UAAM,IAAIV,KAAJ,CAAU,iDAAV,CAAN;AACD;;AACD,SAAOQ,OAAP;AACD;;IANQD,Y;;AAQT,SAASI,eAAT,GAA2B;AAAA;;AACzB,MAAIH,OAAO,GAAGtB,KAAK,CAACuB,UAAN,CAAiBlB,mBAAjB,CAAd;;AACA,MAAIiB,OAAO,KAAKE,SAAhB,EAA2B;AACzB,UAAM,IAAIV,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACD,SAAOQ,OAAP;AACD;;IANQG,e;;AAQT,SAASV,YAAT,EAAuBM,YAAvB,EAAqCI,eAArC,EAAsDC,SAAtD,EAAiEC,OAAjE,G,CAEA;;AAEA,eAAeD,SAAf,CAAyBT,QAAzB,EAAmCW,KAAnC,EAA0CC,QAA1C,EAAoDC,OAApD,EAA6DC,YAA7D,EAA2EC,MAA3E,EAAmF;AACjFD,EAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,MAAI,CAAC,CAACH,KAAF,IAAW,CAAC,CAACC,QAAjB,EAA2B;AACzB,UAAM5B,QAAQ,CAACgC,IAAT,CAAc/B,MAAM,CAAC0B,KAArB,EAA4B;AAAEM,MAAAA,QAAQ,EAAEN,KAAZ;AAAmBC,MAAAA;AAAnB,KAA5B,EACHM,IADG,CACEC,GAAG,IAAI;AACX,YAAMC,MAAM,GAAGD,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEC,MAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,UAAIF,MAAM,KAAK,GAAf,EAAoB;AAClB,cAAMG,SAAS,GAAGJ,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEK,KAAvB;AACAtB,QAAAA,YAAY,CAACuB,OAAb,CAAqB,UAArB,EAAiCF,SAAjC;AACAT,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAd,QAAAA,QAAQ,CAAC;AAAER,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACAqB,QAAAA,OAAO,CAACa,IAAR,CAAa,gBAAb;AACD,OAND,MAMO,IAAIN,MAAM,KAAK,GAAf,EAAoB;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,cAAMQ,GAAG,GAAG,CAAAR,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAExB,OAAL,KAAgB,gCAA5B;AACAK,QAAAA,QAAQ,CAAC;AAAER,UAAAA,IAAI,EAAE,eAAR;AAAyBG,UAAAA,OAAO,EAAEgC;AAAlC,SAAD,CAAR;AACAZ,QAAAA,MAAM,CAACY,GAAD,CAAN;AACAb,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,KAjBG,EAkBHc,KAlBG,CAkBGC,KAAK,IAAI;AACd7B,MAAAA,QAAQ,CAAC;AAAER,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR,CADc,CAEd;;AACAsB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAtBG,CAAN;AAuBD,GAxBD,MAwBO;AACLd,IAAAA,QAAQ,CAAC;AAAER,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR,CADK,CAEL;;AACAsB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;;AAED,SAASJ,OAAT,CAAiBV,QAAjB,EAA2Ba,OAA3B,EAAoC;AAClCX,EAAAA,YAAY,CAAC4B,UAAb,CAAwB,UAAxB;AACA9B,EAAAA,QAAQ,CAAC;AAAER,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACAqB,EAAAA,OAAO,CAACa,IAAR,CAAa,QAAb;AACD","sourcesContent":["import React from \"react\";\r\nimport instance from \"../services\";\r\nimport * as AppURL from \"../services/urlAPI\";\r\n\r\nvar UserStateContext = React.createContext();\r\nvar UserDispatchContext = React.createContext();\r\n\r\nfunction userReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCESS\":\r\n      return { ...state, isAuthenticated: true, loginFailure: null };\r\n    case \"LOGIN_FAILURE\":\r\n      return { ...state, isAuthenticated: false, loginFailure: action.message };\r\n    case \"SIGN_OUT_SUCCESS\":\r\n      return { ...state, isAuthenticated: false, loginFalure: null };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction UserProvider({ children }) {\r\n  var [state, dispatch] = React.useReducer(userReducer, {\r\n    isAuthenticated: !!localStorage.getItem(\"id_token\"),\r\n    loginFailure: null\r\n  });\r\n\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useUserState() {\r\n  var context = React.useContext(UserStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserState must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useUserDispatch() {\r\n  var context = React.useContext(UserDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut };\r\n\r\n// ###########################################################\r\n\r\nasync function loginUser(dispatch, login, password, history, setIsLoading, notify) {\r\n  setIsLoading(true);\r\n\r\n  if (!!login && !!password) {\r\n    await instance.post(AppURL.login, { username: login, password })\r\n      .then(res => {\r\n        const status = res?.status;\r\n        console.log(\"status\");\r\n        if (status === 200) {\r\n          const authToken = res?.token;\r\n          localStorage.setItem(\"id_token\", authToken);\r\n          setIsLoading(false)\r\n          dispatch({ type: 'LOGIN_SUCCESS' })\r\n          history.push('/app/dashboard')\r\n        } else if (status === 400) {\r\n          console.log(res)\r\n          const msg = res?.message || 'Username and/or password wrong';\r\n          dispatch({ type: \"LOGIN_FAILURE\", message: msg });\r\n          notify(msg);\r\n          setIsLoading(true);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch({ type: \"LOGIN_FAILURE\" });\r\n        // showError('Something wrong')\r\n        setIsLoading(false);\r\n      })\r\n  } else {\r\n    dispatch({ type: \"LOGIN_FAILURE\" });\r\n    // showError('Something wrong')\r\n    setIsLoading(false);\r\n  }\r\n}\r\n\r\nfunction signOut(dispatch, history) {\r\n  localStorage.removeItem(\"id_token\");\r\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\r\n  history.push(\"/login\");\r\n}\r\n"]},"metadata":{},"sourceType":"module"}